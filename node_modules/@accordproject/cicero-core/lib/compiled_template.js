(function() {(window.nunjucksPrecompiled = window.nunjucksPrecompiled || {})["template.ne"] = (function() {
function root(env, context, frame, runtime, cb) {
var lineno = 0;
var colno = 0;
var output = "";
try {
var parentTemplate = null;
output += "#\n# This grammar is dynamically generated\n#\n\n#\n# Grammar rules from template text\n#\n";
frame = frame.push();
var t_3 = runtime.contextOrFrameLookup(context, frame, "textRules");
if(t_3) {t_3 = runtime.fromIterator(t_3);
var t_2 = t_3.length;
for(var t_1=0; t_1 < t_3.length; t_1++) {
var t_4 = t_3[t_1];
frame.set("r", t_4);
frame.set("loop.index", t_1 + 1);
frame.set("loop.index0", t_1);
frame.set("loop.revindex", t_2 - t_1);
frame.set("loop.revindex0", t_2 - t_1 - 1);
frame.set("loop.first", t_1 === 0);
frame.set("loop.last", t_1 === t_2 - 1);
frame.set("loop.length", t_2);
output += "\n";
output += runtime.suppressValue(runtime.memberLookup((t_4),"prefix"), env.opts.autoescape);
output += " -> ";
frame = frame.push();
var t_7 = runtime.memberLookup((t_4),"symbols");
if(t_7) {t_7 = runtime.fromIterator(t_7);
var t_6 = t_7.length;
for(var t_5=0; t_5 < t_7.length; t_5++) {
var t_8 = t_7[t_5];
frame.set("s", t_8);
frame.set("loop.index", t_5 + 1);
frame.set("loop.index0", t_5);
frame.set("loop.revindex", t_6 - t_5);
frame.set("loop.revindex0", t_6 - t_5 - 1);
frame.set("loop.first", t_5 === 0);
frame.set("loop.last", t_5 === t_6 - 1);
frame.set("loop.length", t_6);
output += runtime.suppressValue(t_8, env.opts.autoescape);
output += " ";
;
}
}
frame = frame.pop();
output += "\n{% ([ ";
output += runtime.suppressValue(runtime.memberLookup((t_4),"symbols"), env.opts.autoescape);
output += " ]) => {\n    return {\n        ";
if(runtime.memberLookup((t_4),"class")) {
output += "$class: \"";
output += runtime.suppressValue(runtime.memberLookup((t_4),"class"), env.opts.autoescape);
output += "\",";
;
}
output += "\n        ";
if(runtime.memberLookup((t_4),"identifier")) {
output += runtime.suppressValue(runtime.memberLookup((t_4),"identifier"), env.opts.autoescape);
output += ",";
;
}
frame = frame.push();
var t_11 = runtime.memberLookup((t_4),"properties");
if(t_11) {t_11 = runtime.fromIterator(t_11);
var t_10 = t_11.length;
for(var t_9=0; t_9 < t_11.length; t_9++) {
var t_12 = t_11[t_9];
frame.set("p", t_12);
frame.set("loop.index", t_9 + 1);
frame.set("loop.index0", t_9);
frame.set("loop.revindex", t_10 - t_9);
frame.set("loop.revindex0", t_10 - t_9 - 1);
frame.set("loop.first", t_9 === 0);
frame.set("loop.last", t_9 === t_10 - 1);
frame.set("loop.length", t_10);
output += "\n        ";
output += runtime.suppressValue(t_12, env.opts.autoescape);
;
}
}
frame = frame.pop();
output += "\n    };\n}\n%}\n";
;
}
}
frame = frame.pop();
output += "\n\n#\n# Grammar rules from the template data model\n#\n";
frame = frame.push();
var t_15 = runtime.contextOrFrameLookup(context, frame, "modelRules");
if(t_15) {t_15 = runtime.fromIterator(t_15);
var t_14 = t_15.length;
for(var t_13=0; t_13 < t_15.length; t_13++) {
var t_16 = t_15[t_13];
frame.set("r", t_16);
frame.set("loop.index", t_13 + 1);
frame.set("loop.index0", t_13);
frame.set("loop.revindex", t_14 - t_13);
frame.set("loop.revindex0", t_14 - t_13 - 1);
frame.set("loop.first", t_13 === 0);
frame.set("loop.last", t_13 === t_14 - 1);
frame.set("loop.length", t_14);
output += "\n";
output += runtime.suppressValue(runtime.memberLookup((t_16),"prefix"), env.opts.autoescape);
output += " -> ";
frame = frame.push();
var t_19 = runtime.memberLookup((t_16),"symbols");
if(t_19) {t_19 = runtime.fromIterator(t_19);
var t_18 = t_19.length;
for(var t_17=0; t_17 < t_19.length; t_17++) {
var t_20 = t_19[t_17];
frame.set("s", t_20);
frame.set("loop.index", t_17 + 1);
frame.set("loop.index0", t_17);
frame.set("loop.revindex", t_18 - t_17);
frame.set("loop.revindex0", t_18 - t_17 - 1);
frame.set("loop.first", t_17 === 0);
frame.set("loop.last", t_17 === t_18 - 1);
frame.set("loop.length", t_18);
output += runtime.suppressValue(t_20, env.opts.autoescape);
output += " ";
;
}
}
frame = frame.pop();
output += "\n";
if(runtime.memberLookup((t_16),"properties")) {
output += "\n{% ( data ) => {\n    return {\n        $class: \"";
output += runtime.suppressValue(runtime.memberLookup((t_16),"class"), env.opts.autoescape);
output += "\",";
frame = frame.push();
var t_23 = runtime.memberLookup((t_16),"properties");
if(t_23) {t_23 = runtime.fromIterator(t_23);
var t_22 = t_23.length;
for(var t_21=0; t_21 < t_23.length; t_21++) {
var t_24 = t_23[t_21];
frame.set("p", t_24);
frame.set("loop.index", t_21 + 1);
frame.set("loop.index0", t_21);
frame.set("loop.revindex", t_22 - t_21);
frame.set("loop.revindex0", t_22 - t_21 - 1);
frame.set("loop.first", t_21 === 0);
frame.set("loop.last", t_21 === t_22 - 1);
frame.set("loop.length", t_22);
output += "\n        ";
output += runtime.suppressValue(t_24, env.opts.autoescape);
;
}
}
frame = frame.pop();
output += "\n    };\n}\n%}\n";
;
}
output += "\n";
;
}
}
frame = frame.pop();
output += "\n\n";
frame = frame.push();
var t_27 = runtime.contextOrFrameLookup(context, frame, "grammars");
if(t_27) {t_27 = runtime.fromIterator(t_27);
var t_25;
if(runtime.isArray(t_27)) {
var t_26 = t_27.length;
for(t_25=0; t_25 < t_27.length; t_25++) {
var t_28 = t_27[t_25][0];
frame.set("[object Object]", t_27[t_25][0]);
var t_29 = t_27[t_25][1];
frame.set("[object Object]", t_27[t_25][1]);
frame.set("loop.index", t_25 + 1);
frame.set("loop.index0", t_25);
frame.set("loop.revindex", t_26 - t_25);
frame.set("loop.revindex0", t_26 - t_25 - 1);
frame.set("loop.first", t_25 === 0);
frame.set("loop.last", t_25 === t_26 - 1);
frame.set("loop.length", t_26);
output += "\n#\n# Grammar: ";
output += runtime.suppressValue(t_28, env.opts.autoescape);
output += "\n#\n";
output += runtime.suppressValue(t_29, env.opts.autoescape);
output += "\n";
;
}
} else {
t_25 = -1;
var t_26 = runtime.keys(t_27).length;
for(var t_30 in t_27) {
t_25++;
var t_31 = t_27[t_30];
frame.set("name", t_30);
frame.set("grammar", t_31);
frame.set("loop.index", t_25 + 1);
frame.set("loop.index0", t_25);
frame.set("loop.revindex", t_26 - t_25);
frame.set("loop.revindex0", t_26 - t_25 - 1);
frame.set("loop.first", t_25 === 0);
frame.set("loop.last", t_25 === t_26 - 1);
frame.set("loop.length", t_26);
output += "\n#\n# Grammar: ";
output += runtime.suppressValue(t_30, env.opts.autoescape);
output += "\n#\n";
output += runtime.suppressValue(t_31, env.opts.autoescape);
output += "\n";
;
}
}
}
frame = frame.pop();
output += "\n";
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
;
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};

})();
})();
